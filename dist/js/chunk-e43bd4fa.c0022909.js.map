{"version":3,"sources":["webpack:///../../../src/components/VSheet/index.ts","webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/mixins/applicationable/index.ts","webpack:///../../../src/components/VProgressCircular/VProgressCircular.ts","webpack:///../../../src/components/VProgressCircular/index.ts","webpack:///../../../src/components/VBtn/VBtn.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/mixins/button-group/index.ts","webpack:///../../../src/components/VBottomNavigation/VBottomNavigation.ts","webpack:///../../../src/directives/scroll/index.ts"],"names":["name","directives","Scroll","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","target","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","document","methods","onScroll","Math","thresholdMet","events","app","Boolean","applicationProperty","prev","removeApplication","activated","created","i","length","deactivated","destroyed","callUpdate","force","updateApplication","button","indeterminate","rotate","type","default","size","width","value","radius","calculatedSize","circumference","classes","normalizedValue","parseFloat","strokeDashArray","strokeDashOffset","strokeWidth","styles","height","svgStyles","transform","viewBoxSize","genCircle","$createElement","class","attrs","fill","cx","cy","r","offset","genSvg","children","style","xmlns","viewBox","genInfo","staticClass","render","h","setTextColor","role","undefined","on","$listeners","baseMixins","mixins","activeClass","btnToggle","block","depressed","fab","icon","loading","outlined","retainFocusOnClick","rounded","tag","text","tile","proxyClass","sizeableClasses","contained","computedRipple","defaultRipple","circle","ripple","isFlat","isRound","measurableStyles","breakingProps","original","replacement","click","e","$el","genContent","genLoader","$slots","loader","setColor","includes","JSON","disabled","absolute","color","dark","opacity","zIndex","__scrim","setBackgroundColor","computedOpacity","themeClasses","provide","genData","backgroundColor","grow","hideOnScroll","horizontal","inputValue","mandatory","shift","$attrs","hasOwnProperty","updateValue","internalValue","change","arg","inserted","binding","self","options","passive","handler","el","unbind"],"mappings":"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","file":"js/chunk-e43bd4fa.c0022909.js","sourcesContent":["import VSheet from './VSheet'\n\nexport { VSheet }\nexport default VSheet\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import { factory as PositionableFactory } from '../positionable'\nimport { TargetProp } from 'vuetify/types/services/application'\n\n// Util\nimport mixins from '../../util/mixins'\n\nexport default function applicationable (value: TargetProp, events: string[] = []) {\n  /* @vue/component */\n  return mixins(PositionableFactory(['absolute', 'fixed'])).extend({\n    name: 'applicationable',\n\n    props: {\n      app: Boolean,\n    },\n\n    computed: {\n      applicationProperty (): TargetProp {\n        return value\n      },\n    },\n\n    watch: {\n      // If previous value was app\n      // reset the provided prop\n      app (x: boolean, prev: boolean) {\n        prev\n          ? this.removeApplication(true)\n          : this.callUpdate()\n      },\n      applicationProperty (newVal, oldVal) {\n        this.$vuetify.application.unregister(this._uid, oldVal)\n      },\n    },\n\n    activated () {\n      this.callUpdate()\n    },\n\n    created () {\n      for (let i = 0, length = events.length; i < length; i++) {\n        this.$watch(events[i], this.callUpdate)\n      }\n      this.callUpdate()\n    },\n\n    mounted () {\n      this.callUpdate()\n    },\n\n    deactivated () {\n      this.removeApplication()\n    },\n\n    destroyed () {\n      this.removeApplication()\n    },\n\n    methods: {\n      callUpdate () {\n        if (!this.app) return\n\n        this.$vuetify.application.register(\n          this._uid,\n          this.applicationProperty,\n          this.updateApplication()\n        )\n      },\n      removeApplication (force = false) {\n        if (!force && !this.app) return\n\n        this.$vuetify.application.unregister(\n          this._uid,\n          this.applicationProperty\n        )\n      },\n      updateApplication: () => 0,\n    },\n  })\n}\n","// Styles\nimport './VProgressCircular.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\n\n/* @vue/component */\nexport default Colorable.extend({\n  name: 'v-progress-circular',\n\n  props: {\n    button: Boolean,\n    indeterminate: Boolean,\n    rotate: {\n      type: [Number, String],\n      default: 0,\n    },\n    size: {\n      type: [Number, String],\n      default: 32,\n    },\n    width: {\n      type: [Number, String],\n      default: 4,\n    },\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    radius: 20,\n  }),\n\n  computed: {\n    calculatedSize (): number {\n      return Number(this.size) + (this.button ? 8 : 0)\n    },\n\n    circumference (): number {\n      return 2 * Math.PI * this.radius\n    },\n\n    classes (): object {\n      return {\n        'v-progress-circular--indeterminate': this.indeterminate,\n        'v-progress-circular--button': this.button,\n      }\n    },\n\n    normalizedValue (): number {\n      if (this.value < 0) {\n        return 0\n      }\n\n      if (this.value > 100) {\n        return 100\n      }\n\n      return parseFloat(this.value)\n    },\n\n    strokeDashArray (): number {\n      return Math.round(this.circumference * 1000) / 1000\n    },\n\n    strokeDashOffset (): string {\n      return ((100 - this.normalizedValue) / 100) * this.circumference + 'px'\n    },\n\n    strokeWidth (): number {\n      return Number(this.width) / +this.size * this.viewBoxSize * 2\n    },\n\n    styles (): object {\n      return {\n        height: convertToUnit(this.calculatedSize),\n        width: convertToUnit(this.calculatedSize),\n      }\n    },\n\n    svgStyles (): object {\n      return {\n        transform: `rotate(${Number(this.rotate)}deg)`,\n      }\n    },\n\n    viewBoxSize (): number {\n      return this.radius / (1 - Number(this.width) / +this.size)\n    },\n  },\n\n  methods: {\n    genCircle (name: string, offset: string | number): VNode {\n      return this.$createElement('circle', {\n        class: `v-progress-circular__${name}`,\n        attrs: {\n          fill: 'transparent',\n          cx: 2 * this.viewBoxSize,\n          cy: 2 * this.viewBoxSize,\n          r: this.radius,\n          'stroke-width': this.strokeWidth,\n          'stroke-dasharray': this.strokeDashArray,\n          'stroke-dashoffset': offset,\n        },\n      })\n    },\n    genSvg (): VNode {\n      const children = [\n        this.indeterminate || this.genCircle('underlay', 0),\n        this.genCircle('overlay', this.strokeDashOffset),\n      ] as VNodeChildren\n\n      return this.$createElement('svg', {\n        style: this.svgStyles,\n        attrs: {\n          xmlns: 'http://www.w3.org/2000/svg',\n          viewBox: `${this.viewBoxSize} ${this.viewBoxSize} ${2 * this.viewBoxSize} ${2 * this.viewBoxSize}`,\n        },\n      }, children)\n    },\n    genInfo (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-circular__info',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-progress-circular',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue,\n      },\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }), [\n      this.genSvg(),\n      this.genInfo(),\n    ])\n  },\n})\n","import VProgressCircular from './VProgressCircular'\n\nexport { VProgressCircular }\nexport default VProgressCircular\n","// Styles\nimport './VBtn.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VProgressCircular from '../VProgressCircular'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Positionable from '../../mixins/positionable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator, PropType } from 'vue/types/options'\nimport { RippleOptions } from '../../directives/ripple'\n\nconst baseMixins = mixins(\n  VSheet,\n  Routable,\n  Positionable,\n  Sizeable,\n  GroupableFactory('btnToggle'),\n  ToggleableFactory('inputValue')\n  /* @vue/component */\n)\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-btn',\n\n  props: {\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.btnToggle) return ''\n\n        return this.btnToggle.activeClass\n      },\n    } as any as PropValidator<string>,\n    block: Boolean,\n    depressed: Boolean,\n    fab: Boolean,\n    icon: Boolean,\n    loading: Boolean,\n    outlined: Boolean,\n    retainFocusOnClick: Boolean,\n    rounded: Boolean,\n    tag: {\n      type: String,\n      default: 'button',\n    },\n    text: Boolean,\n    tile: Boolean,\n    type: {\n      type: String,\n      default: 'button',\n    },\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-btn--active',\n  }),\n\n  computed: {\n    classes (): any {\n      return {\n        'v-btn': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-btn--absolute': this.absolute,\n        'v-btn--block': this.block,\n        'v-btn--bottom': this.bottom,\n        'v-btn--contained': this.contained,\n        'v-btn--depressed': (this.depressed) || this.outlined,\n        'v-btn--disabled': this.disabled,\n        'v-btn--fab': this.fab,\n        'v-btn--fixed': this.fixed,\n        'v-btn--flat': this.isFlat,\n        'v-btn--icon': this.icon,\n        'v-btn--left': this.left,\n        'v-btn--loading': this.loading,\n        'v-btn--outlined': this.outlined,\n        'v-btn--right': this.right,\n        'v-btn--round': this.isRound,\n        'v-btn--rounded': this.rounded,\n        'v-btn--router': this.to,\n        'v-btn--text': this.text,\n        'v-btn--tile': this.tile,\n        'v-btn--top': this.top,\n        ...this.themeClasses,\n        ...this.groupClasses,\n        ...this.elevationClasses,\n        ...this.sizeableClasses,\n      }\n    },\n    contained (): boolean {\n      return Boolean(\n        !this.isFlat &&\n        !this.depressed &&\n        // Contained class only adds elevation\n        // is not needed if user provides value\n        !this.elevation\n      )\n    },\n    computedRipple (): RippleOptions | boolean {\n      const defaultRipple = this.icon || this.fab ? { circle: true } : true\n      if (this.disabled) return false\n      else return this.ripple != null ? this.ripple : defaultRipple\n    },\n    isFlat (): boolean {\n      return Boolean(\n        this.icon ||\n        this.text ||\n        this.outlined\n      )\n    },\n    isRound (): boolean {\n      return Boolean(\n        this.icon ||\n        this.fab\n      )\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['flat', 'text'],\n      ['outline', 'outlined'],\n      ['round', 'rounded'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      // TODO: Remove this in v3\n      !this.retainFocusOnClick && !this.fab && e.detail && this.$el.blur()\n      this.$emit('click', e)\n\n      this.btnToggle && this.toggle()\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-btn__content',\n      }, this.$slots.default)\n    },\n    genLoader (): VNode {\n      return this.$createElement('span', {\n        class: 'v-btn__loader',\n      }, this.$slots.loader || [this.$createElement(VProgressCircular, {\n        props: {\n          indeterminate: true,\n          size: 23,\n          width: 2,\n        },\n      })])\n    },\n  },\n\n  render (h): VNode {\n    const children = [\n      this.genContent(),\n      this.loading && this.genLoader(),\n    ]\n    const setColor = !this.isFlat ? this.setBackgroundColor : this.setTextColor\n    const { tag, data } = this.generateRouteLink()\n\n    if (tag === 'button') {\n      data.attrs!.type = this.type\n      data.attrs!.disabled = this.disabled\n    }\n    data.attrs!.value = ['string', 'number'].includes(typeof this.value)\n      ? this.value\n      : JSON.stringify(this.value)\n\n    return h(tag, this.disabled ? data : setColor(this.color, data), children)\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","// Extensions\nimport { BaseItemGroup } from '../../components/VItemGroup/VItemGroup'\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'button-group',\n\n  provide (): object {\n    return {\n      btnToggle: this,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return BaseItemGroup.options.computed.classes.call(this)\n    },\n  },\n\n  methods: {\n    // Isn't being passed down through types\n    genData: BaseItemGroup.options.methods.genData,\n  },\n})\n","// Styles\nimport './VBottomNavigation.sass'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport ButtonGroup from '../../mixins/button-group'\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport Proxyable from '../../mixins/proxyable'\nimport Scrollable from '../../mixins/scrollable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Applicationable('bottom', [\n    'height',\n    'inputValue',\n  ]),\n  Colorable,\n  Measurable,\n  ToggleableFactory('inputValue'),\n  Proxyable,\n  Scrollable,\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-bottom-navigation',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-btn--active',\n    },\n    backgroundColor: String,\n    grow: Boolean,\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n    hideOnScroll: Boolean,\n    horizontal: Boolean,\n    inputValue: {\n      type: Boolean,\n      default: true,\n    },\n    mandatory: Boolean,\n    shift: Boolean,\n  },\n\n  data () {\n    return {\n      isActive: this.inputValue,\n    }\n  },\n\n  computed: {\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.hideOnScroll ||\n          !this.inputValue\n        )\n      )\n    },\n    classes (): object {\n      return {\n        'v-bottom-navigation--absolute': this.absolute,\n        'v-bottom-navigation--grow': this.grow,\n        'v-bottom-navigation--fixed': !this.absolute && (this.app || this.fixed),\n        'v-bottom-navigation--horizontal': this.horizontal,\n        'v-bottom-navigation--shift': this.shift,\n      }\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        transform: this.isActive ? 'none' : 'translateY(100%)',\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('active')) {\n      breaking('active.sync', 'value or v-model', this)\n    }\n  },\n\n  methods: {\n    thresholdMet () {\n      this.isActive = !this.isScrollingUp\n      this.$emit('update:input-value', this.isActive)\n    },\n    updateApplication (): number {\n      return this.$el\n        ? this.$el.clientHeight\n        : 0\n    },\n    updateValue (val: any) {\n      this.$emit('change', val)\n    },\n  },\n\n  render (h): VNode {\n    const data = this.setBackgroundColor(this.backgroundColor, {\n      staticClass: 'v-bottom-navigation',\n      class: this.classes,\n      style: this.styles,\n      props: {\n        activeClass: this.activeClass,\n        mandatory: Boolean(\n          this.mandatory ||\n          this.value !== undefined\n        ),\n        value: this.internalValue,\n      },\n      on: { change: this.updateValue },\n    })\n\n    if (this.canScroll) {\n      data.directives = data.directives || []\n\n      data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return h(ButtonGroup, this.setTextColor(this.color, data), this.$slots.default)\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { handler, options, target = el } = el._onScroll\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n"],"sourceRoot":""}